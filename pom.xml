<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>timkodiert.budgetbook</groupId>
  <artifactId>budget-book</artifactId>
  <name>jBudgetBook</name>
  <url>https://timkodiert.de</url>
  <packaging>pom</packaging>
  <version>BETA-3</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>

    <sonar.organization>tpoerschke</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>

    <main.class>timkodiert.budgetbook.Main</main.class>
    <launcher.class>timkodiert.budgetbook.Launch</launcher.class>

    <maven.exec.skip>false</maven.exec.skip>

    <!-- Infrastructure -->
    <version.jfx>21.0.6</version.jfx>
    <version.dagger>2.55</version.dagger>
    <version.lombok>1.18.36</version.lombok>
    <version.commons-lang>3.18.0</version.commons-lang>
    <version.mapstruct>1.6.3</version.mapstruct>
    <!-- UI -->
    <version.ikonli>12.3.1</version.ikonli>
    <version.atlantafx>2.1.0</version.atlantafx>
    <version.xchart>3.8.8</version.xchart>
    <!-- Database -->
    <version.sqlite-jdbc>3.49.0.0</version.sqlite-jdbc>
    <version.hibernate>6.6.6.Final</version.hibernate>
    <version.flyway>11.3.1</version.flyway>
    <!-- Data Handling -->
    <version.opencsv>5.12.0</version.opencsv>
    <!-- Validation -->
    <version.validation-api>2.0.1.Final</version.validation-api>
    <version.hibernate-validator>7.0.5.Final</version.hibernate-validator>
    <version.el>6.0.1</version.el>
    <version.expressly>5.0.0</version.expressly>
    <!-- Testing -->
    <version.junit>5.11.4</version.junit>
    <version.mockito>5.15.2</version.mockito>
  </properties>

  <modules>
    <module>bb.application</module>
    <module>bb.ui</module>
    <module>bb.ui-infrastructure</module>
    <module>bb.business-logic</module>
    <module>bb.domain</module>
    <module>bb.contract</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${main.class}</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <!-- mvn clean package -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${launcher.class}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.0</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.dagger</groupId>
              <artifactId>dagger-compiler</artifactId>
              <version>${version.dagger}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${version.lombok}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <!-- mvn clean javafx:run -->
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <configuration>
          <mainClass>${launcher.class}</mainClass>
        </configuration>
        <executions>
          <execution>
            <!-- Configuration for debugging -->
            <!-- mvn clean javafx:run@debug -->
            <id>debug</id>
            <configuration>
              <options>
                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:8001</option>
              </options>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.1.2</version>
      </plugin>
      <plugin>
        <!-- mvn clean verify jacoco:report -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.10</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- mvn process-resources -P build-manual -->
      <id>build-manual</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <phase>process-resources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>build_user_manual.sh</executable>
                  <skip>${maven.exec.skip}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${version.mapstruct}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${version.lombok}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.dagger</groupId>
      <artifactId>dagger</artifactId>
      <version>${version.dagger}</version>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>${version.opencsv}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>13.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${version.commons-lang}</version>
    </dependency>
    <!-- JavaFX -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${version.jfx}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${version.jfx}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>${version.jfx}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <!-- Benötigt für xchart -->
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${version.jfx}</version>
      <scope>compile</scope>
    </dependency>
    <!-- Icons -->
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-javafx</artifactId>
      <version>${version.ikonli}</version>
    </dependency>
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-bootstrapicons-pack</artifactId>
      <version>${version.ikonli}</version>
    </dependency>
    <!-- Charts -->
    <dependency>
      <groupId>org.knowm.xchart</groupId>
      <artifactId>xchart</artifactId>
      <version>${version.xchart}</version>
    </dependency>
    <!-- Database -->
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${version.hibernate}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-community-dialects</artifactId>
      <version>${version.hibernate}</version>
    </dependency>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>${version.sqlite-jdbc}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${version.flyway}</version>
    </dependency>
    <!-- Theme -->
    <dependency>
      <groupId>io.github.mkpaz</groupId>
      <artifactId>atlantafx-base</artifactId>
      <version>${version.atlantafx}</version>
    </dependency>
    <!-- Validation -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${version.validation-api}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${version.hibernate-validator}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.el</groupId>
      <artifactId>jakarta.el-api</artifactId>
      <version>${version.el}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.expressly</groupId>
      <artifactId>expressly</artifactId>
      <version>${version.expressly}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${version.junit}</version>
      <!-- can be omitted when using the BOM -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>